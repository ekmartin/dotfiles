" Map leader to ,
let mapleader = ","
let g:mapleader = ","

syntax on

" Change buffers without saving
set hidden

" Show line numbers
set number

" Make backspace work normally
set backspace=2

" Set tabs to 4 spaces
set softtabstop=2
set tabstop=2
set shiftwidth=2
set expandtab

" Fix indenting
filetype indent on
set autoindent

" Display 3 lines around cursor
set scrolloff=3

" Better search
set hlsearch
set incsearch
set ignorecase
set smartcase

" Don't add two spaces when joining lines
set nojoinspaces

set autoread

" Vundle
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'bling/vim-airline'
Plugin 'majutsushi/tagbar'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'moll/vim-node'
Plugin 'pangloss/vim-javascript'
Plugin 'scrooloose/nerdtree'
Plugin 'w0rp/ale'
" Plugin 'airblade/vim-gitgutter'
Plugin 'fatih/vim-go'
Plugin 'marijnh/tern_for_vim'
Plugin 'mxw/vim-jsx'
Plugin 'joshdick/onedark.vim'
Plugin 'lervag/vimtex'
Plugin 'vim-ruby/vim-ruby'
Plugin 'janko-m/vim-test'
Plugin 'rust-lang/rust.vim'
" Plugin 'racer-rust/vim-racer'

call vundle#end()            " required
filetype plugin indent on    " required

set termguicolors
colorscheme onedark

nnoremap <Leader>] :YcmCompleter GoTo<CR>

let g:jsx_ext_required = 0

let g:rustfmt_autosave = 1

" Ale
let g:ale_fix_on_save = 1
let g:ale_javascript_prettier_options = '--single-quote'
let g:ale_fixers = {
\   'javascript': ['prettier'],
\}

" let g:racer_cmd = '/Users/ek/.cargo/bin/racer'
let g:ycm_rust_src_path = '/Users/ek/.rustup/toolchains/nightly-x86_64-apple-darwin/lib/rustlib/src/rust/src/rustc'

" For Airline
set laststatus=2
" let g:airline#extensions#tabline#enabled = 1

" Keybindings
map <C-n> :NERDTreeToggle<CR>
map <D-p> :CtrlPMixed<CR>

" Move in screen lines
noremap  <buffer> <silent> k gk
noremap  <buffer> <silent> j gj
noremap  <buffer> <silent> 0 g0
noremap  <buffer> <silent> $ g$

" delete without yanking
nnoremap <leader>d "_d
vnoremap <leader>d "_d

let g:ctrlp_prompt_mappings = {
  \ 'AcceptSelection("e")': [],
  \ 'AcceptSelection("t")': ['<cr>', '<c-m>'],
\ }

" run tests with vim-test
nmap <silent> <leader>t :TestNearest<CR>
nmap <silent> <leader>T :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>

" replace currently selected text with default register
" without yanking it
vnoremap <leader>p "_dP

" set timeoutlen=350

" Show buffers in airline
" let g:airline#extensions#tabline#enabled = 1

" Remove whitespace highlight from vim-go
let g:go_highlight_trailing_whitespace_error = 0
let g:go_fmt_command = "goimports"

" Remove search highlight
nnoremap <leader><space> :nohlsearch<CR>

if $TERM_PROGRAM =~ "iTerm"
    let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
    let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode
endif

" Highlight VCS conflict markers
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

function! TrimWhiteSpace()
    %s/\s\+$//e
endfunction
autocmd FileType rust,ruby,c,java,javascript,python,go,elixir autocmd BufWritePre * call TrimWhiteSpace()
nnoremap <silent> <leader>ts :call TrimWhiteSpace()<CR>

function! TextFormat()
    set linebreak
    set wrap
    set textwidth=80
endfunction
command! Text call TextFormat()

" Close vim if the only open window left is NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/node_modules/*
